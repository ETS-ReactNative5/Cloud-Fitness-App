{"ast":null,"code":"var _jsxFileName = \"/Users/Vic/Documents/GenTech/repos/blog-client/src/components/Nav.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { Navbar } from \"react-bulma-components\"; // The Nav component renders the nav bar at the top of the page\n// It is a class component because it requires state to manage the hamburger menu toggle\n\nclass Nav extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = () => {\n      const active = this.state.active;\n      this.setState({\n        active: !active\n      });\n    };\n\n    this.navLoggedIn = () => {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(Navbar.Container, {\n        position: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(Navbar.Item, {\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Logout\")), React.createElement(Navbar.Container, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(Navbar.Item, {\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Add Post\"), React.createElement(Navbar.Item, {\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Categories\"), React.createElement(Navbar.Item, {\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Home\"), React.createElement(Navbar.Item, {\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"My Blog\")));\n    };\n\n    this.navLoggedOut = () => {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Navbar.Container, {\n        position: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Navbar.Item, {\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Login\"), React.createElement(Navbar.Item, {\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Register\")), React.createElement(Navbar.Container, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Navbar.Item, {\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Categories\"), React.createElement(Navbar.Item, {\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Home\")));\n    };\n\n    this.state = {\n      active: false\n    };\n  } // handleClick is used to toggle the active state of the hamburger menu\n\n\n  render() {\n    // active is stored in state, and used to toggle the hamburger menu\n    const active = this.state.active;\n    const loggedInUser = this.props.loggedInUser;\n    return React.createElement(Navbar, {\n      color: \"info\",\n      fixed: \"top\",\n      active: active,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Navbar.Brand, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Navbar.Item, {\n      renderAs: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, loggedInUser || \"guest\"), React.createElement(Navbar.Burger, {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(Navbar.Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, loggedInUser ? this.navLoggedIn() : this.navLoggedOut()));\n  }\n\n}","map":{"version":3,"sources":["/Users/Vic/Documents/GenTech/repos/blog-client/src/components/Nav.js"],"names":["React","Component","Fragment","Navbar","Nav","constructor","props","handleClick","active","state","setState","navLoggedIn","navLoggedOut","render","loggedInUser"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\"\nimport { Navbar } from \"react-bulma-components\"\n\n// The Nav component renders the nav bar at the top of the page\n// It is a class component because it requires state to manage the hamburger menu toggle\nclass Nav extends Component {\n    constructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tactive: false\n\t\t}\n    }\n\n    // handleClick is used to toggle the active state of the hamburger menu\n    handleClick = () => {\n        const { active } = this.state\n        this.setState({ active: !active })\n    }\n\n    navLoggedIn = () => {\n        return (\n            <Fragment>\n                <Navbar.Container position=\"start\">\n                    <Navbar.Item href=\"#\">Logout</Navbar.Item>\n                </Navbar.Container>\n                <Navbar.Container position=\"end\">\n                            <Navbar.Item href=\"#\">Add Post</Navbar.Item>\n                            <Navbar.Item href=\"#\">Categories</Navbar.Item>\n                            <Navbar.Item href=\"#\">Home</Navbar.Item>\n                            <Navbar.Item href=\"#\">My Blog</Navbar.Item>\n                </Navbar.Container>\n            </Fragment>\n        )\n    }\n\n    navLoggedOut = () => {\n        return (\n            <Fragment>\n                <Navbar.Container position=\"start\">\n                        <Navbar.Item href=\"#\">Login</Navbar.Item>\n                        <Navbar.Item href=\"#\">Register</Navbar.Item>\n                </Navbar.Container>\n                <Navbar.Container position=\"end\">\n                    <Navbar.Item href=\"#\">Categories</Navbar.Item>\n                    <Navbar.Item href=\"#\">Home</Navbar.Item>\n                </Navbar.Container>\n            </Fragment>\n        )\n    }\n\n    render() {\n        // active is stored in state, and used to toggle the hamburger menu\n        const { active } = this.state\n        const { loggedInUser } = this.props\n        return (\n            <Navbar color=\"info\" fixed=\"top\"  active={active}>\n                <Navbar.Brand>\n                    <Navbar.Item renderAs=\"p\">{loggedInUser || \"guest\"}</Navbar.Item>\n                    <Navbar.Burger onClick={this.handleClick} />\n                </Navbar.Brand>\n                <Navbar.Menu>\n                    {/* Render the relevant links depending on whether or not a user is logged in  */}\n                    {loggedInUser ? this.navLoggedIn() : this.navLoggedOut()}\n                </Navbar.Menu>\n            </Navbar>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}